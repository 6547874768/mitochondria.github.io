name: Auto-generate Sitemap

# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º push –≤ main –≤–µ—Ç–∫—É
on:
  push:
    branches: [ main, master ]
  # –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é
  workflow_dispatch:

jobs:
  generate-sitemap:
    runs-on: ubuntu-latest
    
    # –ü—Ä–∞–≤–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã
        fetch-depth: 0
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Create sitemap generator script
      run: |
        cat > generate_sitemap.py << 'EOF'
        #!/usr/bin/env python3
        """
        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä sitemap.xml –¥–ª—è GitHub Pages
        """
        
        import os
        import datetime
        from pathlib import Path
        import re
        
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        SITE_URL = "https://www.danilichev.info"
        EXCLUDE_DIRS = ['.git', '.github', 'node_modules', '__pycache__']
        EXCLUDE_FILES = ['README.md', 'sitemap.xml', 'robots.txt', '.gitignore', 'CNAME', '404.html']
        
        def scan_html_files():
            """–°–∫–∞–Ω–∏—Ä—É–µ—Ç –ø—Ä–æ–µ–∫—Ç –∏ –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
            urls = []
            today = datetime.date.today().strftime('%Y-%m-%d')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if os.path.exists('index.html'):
                urls.append({
                    'loc': SITE_URL + '/',
                    'lastmod': today,
                    'changefreq': 'weekly',
                    'priority': '1.0'
                })
            
            # –°–∫–∞–Ω–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞–ø–æ–∫ —Å index.html
            for root, dirs, files in os.walk('.'):
                # –ò—Å–∫–ª—é—á–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                dirs[:] = [d for d in dirs if not any(exclude in d for exclude in EXCLUDE_DIRS)]
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é (—É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤—ã—à–µ)
                if root == '.':
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ index.html –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                if 'index.html' in files:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º URL –∏–∑ –∏–º–µ–Ω–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                    dir_path = os.path.relpath(root, '.')
                    url_path = '/' + dir_path.replace('\\', '/') + '/'
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ —á–∞—Å—Ç–æ—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    priority = determine_priority(url_path)
                    changefreq = determine_changefreq(url_path)
                    
                    urls.append({
                        'loc': SITE_URL + url_path,
                        'lastmod': today,
                        'changefreq': changefreq,
                        'priority': priority
                    })
            
            return sorted(urls, key=lambda x: float(x['priority']), reverse=True)
        
        def determine_priority(url_path):
            """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ URL"""
            # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            if url_path == '/':
                return '1.0'
            
            # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –ª–µ–Ω–¥–∏–Ω–≥
            if 'advanced-mitochondrial-formula' in url_path:
                return '0.95'
            
            # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã)
            categories = [
                'health-supplements', 'health-products', 'anti-aging-hacks', 
                'brain-supplements', 'weight-loss-supplements'
            ]
            if any(cat in url_path for cat in categories):
                return '0.9'
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            return '0.8'
        
        def determine_changefreq(url_path):
            """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —á–∞—Å—Ç–æ—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
            # –ì–ª–∞–≤–Ω–∞—è –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —á–∞—â–µ
            if url_path == '/' or float(determine_priority(url_path)) >= 0.9:
                return 'weekly'
            return 'monthly'
        
        def generate_sitemap_xml(urls):
            """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç XML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ sitemap"""
            xml_content = '''<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
        http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
'''
            
            for url in urls:
                xml_content += f'''
    <url>
        <loc>{url['loc']}</loc>
        <lastmod>{url['lastmod']}</lastmod>
        <changefreq>{url['changefreq']}</changefreq>
        <priority>{url['priority']}</priority>
    </url>'''
            
            xml_content += '''

</urlset>'''
            
            return xml_content
        
        def main():
            """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap"""
            print("üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å HTML —Ñ–∞–π–ª–∞–º–∏...")
            urls = scan_html_files()
            
            print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ {len(urls)} —Å—Ç—Ä–∞–Ω–∏—Ü:")
            for url in urls:
                print(f"  - {url['loc']} (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {url['priority']})")
            
            print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è sitemap.xml...")
            sitemap_content = generate_sitemap_xml(urls)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            with open('sitemap.xml', 'w', encoding='utf-8') as f:
                f.write(sitemap_content)
            
            print("‚úÖ Sitemap —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
            print(f"üåê URL: {SITE_URL}/sitemap.xml")
        
        if __name__ == "__main__":
            main()
        EOF
    
    - name: Generate sitemap
      run: |
        echo "üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ sitemap..."
        python generate_sitemap.py
        
    - name: Check if sitemap changed
      id: check_changes
      run: |
        if git diff --quiet sitemap.xml; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "üìã Sitemap –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "üîÑ Sitemap –æ–±–Ω–æ–≤–ª–µ–Ω"
        fi
    
    - name: Commit and push sitemap
      if: steps.check_changes.outputs.changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "GitHub Actions Bot"
        git add sitemap.xml
        git commit -m "ü§ñ Auto-update sitemap.xml - $(date '+%Y-%m-%d %H:%M:%S')"
        git push
        echo "‚úÖ Sitemap committed and pushed!"
    
    - name: No changes message
      if: steps.check_changes.outputs.changed == 'false'
      run: |
        echo "‚ÑπÔ∏è Sitemap –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
